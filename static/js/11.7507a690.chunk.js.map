{"version":3,"sources":["views/app-views/dashboard/Board.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/app-views/dashboard/ObjectList.js","views/app-views/dashboard/index.js","redux/actions/Dashboard.js"],"names":["Board","elements","setElements","boardRef","useRef","useState","draggedItem","setDraggedItem","x","y","dragOffset","setDragOffset","boardWidth","setBoardWidth","boardHeight","setBoardHeight","useEffect","current","getBoundingClientRect","width","height","className","ref","onDragOver","event","preventDefault","onDrop","map","item","style","left","position","top","opacity","draggable","onDragStart","dataTransfer","setData","JSON","stringify","offsetX","clientX","offsetY","clientY","handleDragStart","onDrag","elementOffsetX","elementOffsetY","newItems","element","id","handleDrag","src","content","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ObjectList","saveElementsWithCoords","objectList","useSelector","state","dashboard","selectedElement","setSelectedElement","elem","onClick","type","name","checked","onChange","e","newElement","Math","random","toString","substr","prevElements","handleAddElement","Dashboard","dispatch","useDispatch","savedElements","showElements","setShowElements","payload","SAVE_ELEMENTS_DASHBOARD","setTimeout"],"mappings":"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","file":"static/js/11.7507a690.chunk.js","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\n\nconst Board = ({elements, setElements}) => {\n  const boardRef = useRef(null);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [dragOffset, setDragOffset] = useState({x: 0, y: 0});\n  const [boardWidth, setBoardWidth] = useState(null)\n  const [boardHeight, setBoardHeight] = useState(null)\n\n  /*\n  * вычисляет ширину и высоту внешнего дива\n  * */\n  useEffect(() => {\n    const {width, height} = boardRef.current.getBoundingClientRect();\n    setBoardWidth(width)\n    setBoardHeight(height)\n  }, [])\n\n  const handleDragStart = (event, item) => {\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(item));\n    setDraggedItem(item);\n    /*\n    * позволяет вычислить координаты верхнего левого угла, относительно положения курсора на элементе\n    * */\n    const {top, left} = boardRef.current.getBoundingClientRect();\n    const offsetX = event.clientX - left - item.position.x;\n    const offsetY = event.clientY - top - item.position.y;\n    setDragOffset({x: offsetX, y: offsetY});\n  };\n\n  const handleDrag = (event, item) => {\n    const {top, left} = boardRef.current.getBoundingClientRect();\n    const offsetX = event.clientX - left;\n    const offsetY = event.clientY - top;\n\n    /*\n    * Вычисление новой позиции с учетом смещения курсора на элементе\n    * */\n    const elementOffsetX = offsetX - dragOffset.x;\n    const elementOffsetY = offsetY - dragOffset.y;\n    /*\n    * при резких движениях, координаты могут уйти в отрицательное значение\n    * */\n    if (elementOffsetX >= 0 && elementOffsetY >= 0) {\n      /*\n      * Ограничение на внешний див доски -1px так как border = 1px\n      * */\n      if (elementOffsetX < boardWidth - item.width - 1 && elementOffsetY < boardHeight - item.height - 1) {\n        const newItems = elements.map((element) =>\n          element.id === item.id ? {...element, position: {x: elementOffsetX, y: elementOffsetY}} : element\n        );\n        setElements(newItems);\n      }\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    setDraggedItem(null);\n  };\n\n  return (\n    <div\n      className={'board'}\n      ref={boardRef} // Ссылка на внешний div\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      {elements.map((item) => (\n        <div\n          className={'board-item'}\n          key={item.id}\n          style={{\n            left: item.position.x,\n            top: item.position.y,\n            width: `${item.width}px`,\n            height: `${item.height}px`,\n            opacity: draggedItem === item ? 0 : 1,\n          }}\n          draggable=\"true\"\n          onDragStart={(event) => handleDragStart(event, item)}\n          onDrag={(event) => handleDrag(event, item)}\n        >\n          <img className={'board-item-img'} src={item.content} alt=\"bord-draggable-element\"/>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from 'react';\nimport {Button} from \"antd\";\nimport {useSelector} from \"react-redux\";\n\nconst ObjectList = ({setElements, saveElementsWithCoords}) => {\n  const objectList = useSelector(state => state.dashboard.objectList)\n\n  const [selectedElement, setSelectedElement] = useState(null);\n\n  const handleElementClick = (element) => {\n    setSelectedElement(element);\n  };\n\n  const handleAddElement = (e) => {\n    e.preventDefault()\n    if (selectedElement) {\n      const newElement = {\n        id: `new_${Math.random().toString(36).substr(2, 9)}`,\n        content: selectedElement.content,\n        position: {x: 0, y: 0},\n        width: selectedElement.width,\n        height: selectedElement.height,\n      };\n\n      setElements((prevElements) => [...prevElements, newElement]);\n    }\n  };\n\n\n  return (\n    <div className=\"object-list-wrapper\">\n      <div className=\"object-list\">\n        <h4>Кликните, чтобы выбрать</h4>\n        {objectList.map((elem) => (\n          <label\n            key={elem.content}\n            className={`object-list-item${selectedElement?.content === elem.content ? ' selected' : ''}`}\n            onClick={() => handleElementClick(elem)}\n          >\n            <input\n              type=\"radio\"\n              name=\"object-radio\"\n              checked={selectedElement === elem}\n              onChange={() => {\n              }}\n            />\n            <img className={'board-item-img'} src={elem.content} alt=\"add-draggable-element\"/>\n          </label>\n        ))}\n        <Button type={'primary'} onClick={(e) => handleAddElement(e)}>\n          Добавить элемент\n        </Button>\n        <Button type={'dashed'} onClick={saveElementsWithCoords}>\n          Сохранить планировку\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ObjectList;\n","import './dashboard.css'\nimport React, {useState} from 'react';\nimport Board from './Board';\nimport ObjectList from \"./ObjectList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {saveElementsDashboard} from \"../../../redux/actions/Dashboard\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const savedElements = useSelector(state => state.dashboard.elements)\n\n  const [elements, setElements] = useState(savedElements)\n  const [showElements, setShowElements] = useState(false);\n\n  const saveElementsWithCoords = () => {\n    dispatch(saveElementsDashboard(elements))\n    setShowElements(true);\n    setTimeout(() => {\n      setShowElements(false);\n    }, 5000)\n  };\n\n  return (\n    <div className={'dashboard-wrapper'}>\n      <h1>Dashboard</h1>\n      <div className={'dashboard'}>\n        <ObjectList setElements={setElements}\n                    saveElementsWithCoords={saveElementsWithCoords}/>\n        <Board elements={elements}\n               setElements={setElements}/>\n      </div>\n      <div>\n        {showElements && (\n          <div>\n            <h2>Планировка сохранена:</h2>\n            <pre>{JSON.stringify(elements, null, 2)}</pre>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import {SAVE_ELEMENTS_DASHBOARD} from \"../constants/Dashboard\";\n\nexport const saveElementsDashboard = (payload) => {\n  return {\n    type: SAVE_ELEMENTS_DASHBOARD,\n    payload\n  }\n}\n"],"sourceRoot":""}